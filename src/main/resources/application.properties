spring.application.name=CourseWork
server.port=8081

spring.security.user.name=admin
spring.security.user.password=admin

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/restaurant_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=false
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# Keycloak OAuth2 Configuration
spring.security.oauth2.client.registration.keycloak.client-id=restaurant-client
spring.security.oauth2.client.registration.keycloak.client-secret=4sboPhIoObf8fi0UAzxdoaFzuCuoXwZy
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/restaurant-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/restaurant-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/restaurant-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/restaurant-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
